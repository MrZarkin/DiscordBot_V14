// Importation des librairies n√©cessaire
const { PermissionFlagsBits, MessageFlags, SlashCommandBuilder, ChannelType } = require('discord.js');

// Exportation du code
module.exports = {

    // Information n√©cessaire √† la commande
    data: 
        new SlashCommandBuilder()
        .setName('unlock')
        .setDescription('Unlock a channel from sending messages.')
        .addChannelOption(option => 
            option
            .setName('channel')
            .setDescription('Channel to unlock.')
            .setRequired(false)
            .addChannelTypes(ChannelType.GuildText)
        )
        .setDefaultMemberPermissions(PermissionFlagsBits.ManageChannels),

    async execute(interaction)
    {
        // R√©cup√©r√© la valeurs des options
        let channel = interaction.options.getChannel("channel") || interaction.channel;

        if(channel.permissionOverwrites.cache.get(interaction.guild.roles.everyone.id)?.allow.toArray(false).includes("SendMessages"))
            // Si le salon en question a d√©j√† rendu la possibilit√©e d'envoyer des messages impossible pour tout le monde
            return interaction.reply({
                content: `‚ùå The channel is already unlocked!`,
                flags: MessageFlags.Ephemeral
            });

        if(channel.permissionOverwrites.cache.get(interaction.guild.roles.everyone.id))
            // Si le salon poss√®de des permissions pour le r√¥le @everyone
            // Modifier les permisions du role @everyone, pour que tout le monde ne puisse plus √©crire
            await channel.permissionOverwrites.edit(interaction.guild.roles.everyone.id, {SendMessages: true});
        else
            // Modifier les permisions du role @everyone, pour que tout le monde ne puisse plus √©crire
            await channel.permissionOverwrites.create(interaction.guild.roles.everyone.id, {SendMessages: true});

        // R√©pondre que le salon est d√©sorm√© "bloqu√©"
        await interaction.reply(`üîì**${interaction.user.displayName}** unlocked the channel ${channel}!`);
    }
}